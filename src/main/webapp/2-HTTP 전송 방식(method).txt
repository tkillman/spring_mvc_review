HTTP 전송 방식(method)


[NewArticleController.java]

package spring.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import spring.service.ArticleService;
import spring.service.NewArticleCommand;

@Controller
@RequestMapping("/article/newArticle.do")
public class NewArticleController {
	@Autowired
	private ArticleService articleService;

	// @RequestMapping 메서드의 리턴 타입이 String => return값을 viewname으로 사용
	@RequestMapping(method = RequestMethod.GET)
	public String form() {
		return "article/newArticleForm";
	}

	@RequestMapping(method = RequestMethod.POST)
	public String submit(@ModelAttribute("command") NewArticleCommand command) {
		articleService.writeArticle(command);
		return "article/newArticleSubmit";
	}

	public void setArticleService(ArticleService articleService) {
		this.articleService = articleService;
	}

}



[NewArticleCommand.java]

package spring.service;

public class NewArticleCommand {
	// NewArticleComand command 의 프로퍼티 값과 같음
	private String title;
	private String content;
	private int parentId;

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public int getParentId() {
		return parentId;
	}

	public void setParentId(int parentId) {
		this.parentId = parentId;
	}

	@Override
	public String toString() {
		return "NewArticleCommand [content=" + content + ", parentId=" + parentId + ", title=" + title + "]";
	}
}


[ArticleService.java]
package spring.service;

public class ArticleService {

	public void writeArticle(NewArticleCommand command) {
		System.out.println("신규 게시글 등록: " + command);
	}
}



[/WEB-INF/dispatcher-servlet.xml]
	...
	<bean id="newArticleController" class="spring.controller.NewArticleController"
		p:articleService-ref="articleService" />

	<bean id="articleService" class="spring.service.ArticleService" />
	...


[/article/newArticleForm.jsp]
<%@ page contentType="text/html; charset=UTF-8"%>
<html>
<head>
<title>게시글 쓰기</title>
</head>
<body>
	게시글 쓰기 입력 폼:
	<form method="post">
		<input type="hidden" name="parentId" value="10" /> 
		제목: <input type="text" name="title" /><br/>
		내용:
		<textarea name="content"></textarea>
		<br /> <input type="submit" />
	</form>
</body>
</html>


[/article/newArticleSubmit.jsp]

<%@ page contentType="text/html; charset=UTF-8"%>
<html>
<head>
<title>게시글 쓰기</title>
</head>
<body>
	게시글 등록됨:<br>
	제목: ${command.title}<br>
	내용: ${command.content }
</body>
</html>

