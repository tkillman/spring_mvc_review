[GameSearchController.java]
package spring.controller;

import java.util.ArrayList;
import java.util.List;

import spring.service.SearchCommand;
import spring.service.SearchResult;
import spring.service.SearchService;
import spring.model.SearchType;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class GameSearchController {
	
	
	private SearchService searchService;

	@ModelAttribute("searchTypeList")
	public List<SearchType> referenceSearchTypeList() {
		List<SearchType> options = new ArrayList<SearchType>();
		options.add(new SearchType(1, "전체"));
		options.add(new SearchType(2, "아이템"));
		options.add(new SearchType(3, "캐릭터"));
		return options;
	}

	@ModelAttribute("popularQueryList")
	public String[] getPopularQueryList() {
		return new String[] { "게임", "창천2", "위메이드" };
	}

	@RequestMapping("/search/main.do")
	public String main() {
		return "search/main";
	}

	@RequestMapping("/search/game.do")
	public ModelAndView search(@ModelAttribute("command") SearchCommand command) {
		//ModelAndView생성자 첫번째 매개변수는 view name
		ModelAndView mav = new ModelAndView("search/game");
		System.out.println("검색어 = " + command.getQuery().toUpperCase());
		SearchResult result = searchService.search(command);
		mav.addObject("searchResult", result);
		return mav;
	}

	@ExceptionHandler(NullPointerException.class)
	public String handleNullPointerException(NullPointerException ex) {
		return "error/nullException";
	}
	
	public void setSearchService(SearchService searchService) {
		this.searchService = searchService;
	}

}


[SearchCommand.java]
package spring.service;

public class SearchCommand {
	private String type;
	private String query;
	private int page;

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getQuery() {
		return query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	public int getPage() {
		return page;
	}

	public void setPage(int page) {
		this.page = page;
	}
}


[SearchType.java]
package spring.service;

public class SearchType {

	private int code;
	private String text;

	public SearchType(int code, String text) {
			this.code = code;
			this.text = text;
	}

	public int getCode() {
			return code;
	}

	public void setCode(int code) {
			this.code = code;
	}

	public String getText() {
			return text;
	}

	public void setText(String text) {
			this.text = text;
	}

}

[SearchService.java]
package spring.service;

import org.springframework.stereotype.Component;

@Component
public class SearchService {
	public SearchResult search(SearchCommand command) {
		return new SearchResult();
	}
}


[SearchResult.java]
	package spring.service;

public class SearchResult {

}


[dispatcher-servlet.xml]
	...
<bean class="spring.controller.GameSearchController"
		p:searchService-ref="searchService" />

<bean id="searchService" class="spring.service.SearchService" />
	...

[/WEB-INF/view/search/main.jsp]
	<%@ page contentType="text/html; charset=UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<html>
<head>
<title>게임 검색 메인</title>
</head>
<body>
	인기 키워드:
	<c:forEach var="popularQuery" items="${popularQueryList}">
					${popularQuery} 
				</c:forEach>
	<form action="game.do">
		<select name="type">
			<c:forEach var="searchType" items="${searchTypeList}">
				<option value="${searchType.code}">${searchType.text}</option>
			</c:forEach>
		</select>
		 <input type="text" name="query" value="" />
		 <input type="submit" value="검색" />
	</form>
</body>
</html>



[/WEB-INF/view/search/game.jsp]
<%@ page contentType="text/html; charset=UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ page isELIgnored="false"%>
<html>
<head>
<title>게임 검색 결과</title>
</head>
<body>
	인기 키워드:
	<c:forEach var="popularQuery" items="${popularQueryList}">${popularQuery} </c:forEach>
	<form action="game.do">
		<select name="type">
			<c:forEach var="searchType" items="${searchTypeList}">
				<option value="${searchType.code}"
					<c:if test="${command.type == searchType.code}">selected</c:if>>
					${searchType.text}</option>
			</c:forEach>
		</select> <input type="text" name="query" value="${command.query}" /> <input
			type="submit" value="검색" />
	</form>
	검색 결과: ${searchResult}
</body>
</html>









==========================================================================
[CreateAccountController.java]
	package spring.controller;

import javax.servlet.http.HttpServletRequest;

import spring.model.Address; 
import spring.model.MemberInfo;
import spring.validator.MemberInfoValidator;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping("/account/create.do")
public class CreateAccountController {

	@ModelAttribute("command")
	public MemberInfo formBacking(HttpServletRequest request) {
		if (request.getMethod().equalsIgnoreCase("GET")) {
			MemberInfo mi = new MemberInfo();
			Address address = new Address();
			address.setZipcode(autoDetectZipcode(request.getRemoteAddr()));
			mi.setAddress(address);
			return mi;
		} else {
			return new MemberInfo();
		}
	}

	private String autoDetectZipcode(String remoteAddr) {
		return "000-000";
	}

	@RequestMapping(method = RequestMethod.GET)
	public String form() {
		return "account/creationForm";
	}

	@RequestMapping(method = RequestMethod.POST)
	public String submit(@ModelAttribute("command") MemberInfo memberInfo,
			BindingResult result) {
		new MemberInfoValidator().validate(memberInfo, result);
		if (result.hasErrors()) {
			return "account/creationForm";
		}
		return "account/created";
	}
	
	
	
}


[dispatcher-servlet.xml]
	...
	<bean class="spring.controller.CreateAccountController" />
	...
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages.validation</value>
			</list>
		</property>
	</bean>

[/WEB-INF/view/account/creationForm.jsp]
<%@ page contentType="text/html; charset=UTF-8"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<html>
<head>
<title>계정 생성</title>
</head>
<body> 
	<spring:hasBindErrors name="command" />
	<form:errors path="command" />
	<form method="post">
		아이디: <input type="text" name="id" value="${command.id}" />
		<form:errors path="command.id" />
		<br /> 이름: <input type="text" name="name" value="${command.name}" />
		<form:errors path="command.name" />
		<br /> 우편번호: <input type="text" name="address.zipcode"
			value="${command.address.zipcode}" />
		<form:errors path="command.address.zipcode" />
		<br /> 주소1: <input type="text" name="address.address1"
			value="${command.address.address1}" />
		<form:errors path="command.address.address1" />
		<br /> 주소2: <input type="text" name="address.address2"
			value="${command.address.address2}" />
		<form:errors path="command.address.address2" />
		<br /> <input type="submit" />
	</form>
</body>
</html>
[/WEB-INF/view/account/created.jsp]
	<%@ page contentType="text/html; charset=UTF-8"%>
 <%@ page isELIgnored = "false" %>
<html>
<head>
<title>계정 생성</title>
</head>
<body>
	계정 생성됨
	<ul>
		<li>아이디: ${command.id}</li>
		<li>이름: ${command.name}</li>
		<li>우편번호: ${command.address.zipcode}</li>
		<li>주소: ${command.address.address1} ${command.address.address2}</li>
	</ul>
</body>
</html>

[/messages/validation.properties]
required=필수 항목입니다.
invalidIdOrPassword.loginCommand=아이디({0})와 암호가 일치하지 않습니다.
required.loginCommand.userId=사용자 아이디는 필수 항목입니다.
required.password=암호는 필수 항목입니다.
typeMismatch.from=시작일 값 형식은 yyyy-MM-dd 여야 합니다.
typeMismatch.to=종료일 값 형식은 yyyy-MM-dd 여야 합니다.

[MemberInfoValidator.java]
package spring.validator;

import org.springframework.validation.Errors;
import spring.model.Address;
import spring.model.MemberInfo;

public class MemberInfoValidator {
	public boolean supports(Class<?> clazz) {
		return MemberInfo.class.isAssignableFrom(clazz);
	}

	public void validate(Object target, Errors errors) {
		MemberInfo memberInfo = (MemberInfo) target;
		if (memberInfo.getId() == null || memberInfo.getId().trim().isEmpty()) {
			errors.rejectValue("id", "required");
		}
		if (memberInfo.getName() == null || memberInfo.getName().trim().isEmpty()) {
			errors.rejectValue("name", "required");
		}
		Address address = memberInfo.getAddress();
		if (address == null) {
			errors.rejectValue("address", "required");
		}
		if (address != null) {
			errors.pushNestedPath("address");
			try {
				if (address.getZipcode() == null || address.getZipcode().trim().isEmpty()) {
					errors.rejectValue("zipcode", "required");
				}
				if (address.getAddress1() == null || address.getAddress1().trim().isEmpty()) {
					errors.rejectValue("address1", "required");
				}
			} finally {
				errors.popNestedPath();
			}
		}
	}
}


=====================================================================
[GameInfoController.java]
package spring.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class GameInfoController {

	@RequestMapping("/game/info")
	public String gameInfo() {
			return "game/users/info";
	}
		
	@RequestMapping("/game/list")
		public String gameList() {
			return "game/list";
	}
}

[dispatcher-servlet.xml]
	...
	<bean class="spring.controller.GameInfoController" />
	...
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="alwaysUseFullPath" value="true" />
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="alwaysUseFullPath" value="true" />		
	</bean>
	...

[/WEB-INF/view/game/users/info.jsp]
<%@ page contentType="text/html; charset=utf-8"%>
<html>
<head>
<title>캐릭터 정보</title>
</head>
<body>
${userId} 회원의 정보 출력
</body>
</html>

=====================================================================
[CharacterInfoController.java]
package spring.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("/game/users/{userId}")
public class CharacterInfoController {

	@RequestMapping("/characters/{characterId}")
	public String characterInfo(@PathVariable String userId,
				@PathVariable int characterId, ModelMap model) {
		model.addAttribute("userId", userId);
		model.addAttribute("characterId", characterId);
		return "game/character/info";
	}
}

[dispatcher-servlet.xml]
	...
	<bean class="spring.controller.CharacterInfoController" />
	...

[/WEB-INF/view/character/users/info.jsp]
<%@ page contentType="text/html; charset=utf-8"%>
<html>
<head>
</head>
<body>
	${userId} 회원의 ${characterId} 캐릭터 정보 출력
</body>
</html>

